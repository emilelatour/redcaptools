% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_distinct.R
\name{get_distinct}
\alias{get_distinct}
\title{Get distinct values on different rows}
\usage{
get_distinct(data, id, ..., fill_direction = "downup")
}
\arguments{
\item{data}{A data.frame or tibble.}

\item{id}{Unquoted name of grouping variable. Typically a subject or record
id.}

\item{...}{A selection of columns. If empty, nothing happens. You can supply
bare variable names, select all variables between x and z with x:z, exclude
y with -y. For more selection options, see the `dplyr::select()`
documentation.}

\item{fill_direction}{Direction in which to fill missing values. Currently
either "down" (the default), "up", "downup" (i.e. first down and then up)
or "updown" (first up and then down).}
}
\value{
A tbl_df
}
\description{
A wrapper around `dplyr::group_by %>% dplyr::fill %>% dplyr::distinct %>%
dplyr::ungroup()`. I use this all the time when I am working with data from
REDCap. This is meant to make my life easier and clean up my code.
}
\examples{
library(dplyr)
library(tibble)

df <- tibble::tribble(
  ~id,            ~form, ~age,     ~sex,               ~ethnicity, ~trt,
  1L,            "age",  25L,       NA,                       NA,   NA,
  1L,            "sex",   NA,   "Male",                       NA,   NA,
  1L, "race_ethnicity",   NA,       NA,     "Hispanic or Latino",   NA,
  1L,      "treatment",   NA,       NA,                       NA,  "A",
  2L,            "age",  32L,       NA,                       NA,   NA,
  2L,            "sex",   NA, "Female",                       NA,   NA,
  2L, "race_ethnicity",   NA,       NA, "Not Hispanic or Latino",   NA,
  2L,      "treatment",   NA,       NA,                       NA,  "B"
)

df

df \%>\%
  get_distinct(data = .,
               id = id,
               age, sex, ethnicity, trt)
df \%>\%
  get_distinct(data = .,
               id = id,
               dplyr::starts_with("ag"))

df \%>\%
  get_distinct(data = .,
               id = id,
               dplyr::one_of("age", "sex"))
}
